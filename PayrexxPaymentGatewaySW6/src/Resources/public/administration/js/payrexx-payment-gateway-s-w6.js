(this.webpackJsonp=this.webpackJsonp||[]).push([["payrexx-payment-gateway-s-w6"],{"+a4G":function(e){e.exports=JSON.parse('{"payrexx-payment":{"module":{"title":"Payrexx Payments","description":"Payrexx Payments"},"settingsForm":{"title":"Payrexx Payments","test":"Test API-Credentials","save":"Save","messages":{"messageNotBlank":"This Field must not be empty.","titleSuccess":"Success","titleError":"Error","messageTestSuccess":"The API credentials are correct.","messageTestError":"The API credentials are wrong.","messageSaveSuccess":"The plugin settings have been saved.","messageSaveError":"The plugin settings could not be saved."}},"supportModal":{"supportButton":"Support","title":"How Can We Help You?","supportDesc":"Contact our support team","manualButton":"Manual","manualDesc":"Read our integration manual"}}}')},"2/yO":function(e,t){const{Application:s}=Shopware,n=Shopware.Classes.ApiService;class a extends n{constructor(e,t,s="payrexx_payment"){super(e,t,s)}validateApiCredentials(e){const t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{credentials:e},{headers:t}).then(e=>n.handleResponse(e))}}s.addServiceProvider("PayrexxPaymentSettingsService",e=>{const t=s.getContainer("init");return new a(t.httpClient,e.loginService)})},"5lZv":function(e,t,s){var n=s("Uluj");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,s("SZ7m").default)("f472cea2",n,!0,{})},"6cRQ":function(e,t,s){},AJq1:function(e,t){e.exports='{% block payrexx_payment_settings %}\n<sw-page class="payrexx-payment">\n    {% block payrexx_payment_settings_header %}\n    <template slot="smart-bar-header">\n        <h2>\n            {{ $tc(\'sw-settings.index.title\') }}\n            <sw-icon name="small-arrow-medium-right" small></sw-icon>\n            {{ $tc(\'payrexx-payment.settingsForm.title\') }}\n        </h2>\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_actions %}\n    <template slot="smart-bar-actions">\n        {% block payrexx_payment_settings_actions_feedback %}\n        <sw-button\n            @click="isSupportModalOpen = true"\n            :disabled="false"\n            variant="ghost"\n            :square="false"\n            :block="false"\n            :isLoading="false">\n            {{ $tc(\'payrexx-payment.supportModal.supportButton\') }}\n        </sw-button>\n        {% endblock %}\n        {% block payrexx_payment_settings_actions_test %}\n        <sw-button-process @click="onTest"\n                           :isLoading="isTesting"\n                           :processSuccess="isTestSuccessful"\n                           :disabled="credentialsMissing || isLoading">\n            {{ $tc(\'payrexx-payment.settingsForm.test\') }}\n        </sw-button-process>\n        {% endblock %}\n\n\n        {% block payrexx_payment_settings_actions_save %}\n        <sw-button-process\n            class="sw-settings-login-registration__save-action"\n            :isLoading="isLoading"\n            :processSuccess="isSaveSuccessful"\n            :disabled="isLoading || isTesting"\n            variant="primary"\n            @process-finish="saveFinish"\n            @click="onSave">\n            {{ $tc(\'payrexx-payment.settingsForm.save\') }}\n        </sw-button-process>\n        {% endblock %}\n    </template>\n    {% endblock %}\n    {% block payrexx_payment_settings_content %}\n    <template #content>\n        <sw-modal\n            v-if="isSupportModalOpen"\n            @modal-close="isSupportModalOpen = false"\n            :title="$tc(\'payrexx-payment.supportModal.title\')"\n            class="payrexx-support sw-modal--medium">\n            <sw-container columns="1fr 1fr">\n                <div class="payrexx-support__col">\n                    <div class="payrexx-support__icon">\n                        <sw-icon name="default-documentation-file" large="true"></sw-icon>\n                    </div>\n                    <p class="payrexx-support__desc">\n                        {{ $tc(\'payrexx-payment.supportModal.manualDesc\') }}\n                    </p>\n                    <sw-button\n                        :disabled="false"\n                        variant="primary"\n                        :square="false"\n                        :block="false"\n                        :isLoading="false"\n                        link="https://support.payrexx.com/en/support/solutions/articles/11000084187-payrexx-shop-plugin-shopware-6-integration">\n                        {{ $tc(\'payrexx-payment.supportModal.manualButton\') }}\n                    </sw-button>\n                </div>\n                <div class="payrexx-support__col">\n                    <div class="payrexx-support__icon">\n                        <sw-icon name="default-device-headset" large="true"></sw-icon>\n                    </div>\n                    <p class="payrexx-support__desc">\n                        {{ $tc(\'payrexx-payment.supportModal.supportDesc\') }}\n                    </p>\n                    <sw-button\n                        :disabled="false"\n                        variant="primary"\n                        :square="false"\n                        :block="false"\n                        :isLoading="false"\n                        link="mailto:tech.support@payrexx.com">\n                        {{ $tc(\'payrexx-payment.supportModal.supportButton\') }}\n                    </sw-button>\n                </div>\n            </sw-container>\n        </sw-modal>\n\n        <sw-card-view>\n            <sw-system-config\n                ref="systemConfig"\n                salesChannelSwitchable\n                inherit\n                @config-changed="onConfigChange"\n                domain="PayrexxPaymentGatewaySW6.settings">\n                <template #card-element="{ element, config }">\n                    <sw-form-field-renderer\n                        v-if="element.name.startsWith(\'PayrexxPaymentGatewaySW6.settings.paymentStatus\')"\n                        :config="{\n                                        componentName: \'sw-single-select\',\n                                        label: getInlineSnippet(element.config.label),\n                                        helpText: getInlineSnippet(element.config.helpText),\n                                        options: stateMachineTransitionActions,\n                                    }"\n                        v-model="config[element.name]"/>\n                    <sw-form-field-renderer\n                        v-else\n                        v-bind="getBind(element, config)"\n                        v-model="config[element.name]"/>\n                </template>\n            </sw-system-config>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n'},UEfg:function(e,t){e.exports='{% block sw_settings_content_card_slot_plugins %}\n    {% parent %}\n\n    <sw-settings-item :label="$tc(\'payrexx-payment.module.title\')"\n                      :to="{ name: \'payrexx.payment.index\' }"\n                      :backgroundEnabled="false">\n        <template #icon>\n            <img class="sw-settings-index__payrexx-icon" :src="\'payrexxpaymentgatewaysw6/administration/plugin.png\' | asset">\n        </template>\n    </sw-settings-item>\n{% endblock %}\n'},Uluj:function(e,t,s){},a3Uj:function(e,t,s){var n=s("6cRQ");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,s("SZ7m").default)("3bb71543",n,!0,{})},q3Ug:function(e){e.exports=JSON.parse('{"payrexx-payment":{"module":{"title":"Payrexx Payments","description":"Payrexx Payments"},"settingsForm":{"title":"Payrexx Payments","test":"Teste den API-Zugang","save":"Speichern","messages":{"messageNotBlank":"Dieses Feld darf nicht leer sein.","titleSuccess":"Erfolg","titleError":"Fehler","messageTestSuccess":"Die API-Zugangsdaten sind korrekt.","messageTestError":"Die API-Zugangsdaten sind falsch.","messageSaveSuccess":"Die Plugin-Einstellungen wurden gespeichert.","messageSaveError":"Die Plugin-Einstellungen konnten nicht gespeichert werden."}},"supportModal":{"supportButton":"Support","title":"Wie kÃ¶nnen wir Ihnen helfen?","supportDesc":"Kontaktieren Sie unser Support-Team","manualButton":"Dokumentation","manualDesc":"Lesen Sie unsere Integrations Anleitung"}}}')},vR4U:function(e,t,s){"use strict";s.r(t);var n=s("UEfg"),a=s.n(n);s("a3Uj");const{Component:i}=Shopware;i.override("sw-settings-index",{template:a.a});var o=s("AJq1"),r=s.n(o);s("5lZv");const{Component:l,Mixin:c}=Shopware;l.register("payrexx-settings",{template:r.a,mixins:[c.getByName("notification"),c.getByName("sw-inline-snippet")],inject:["PayrexxPaymentSettingsService"],data:()=>({config:{},isLoading:!1,isTesting:!1,isSaveSuccessful:!1,isTestSuccessful:!1,instanceNameFilled:!1,apiKeyFilled:!1,showValidationErrors:!1,isSupportModalOpen:!1}),computed:{credentialsMissing:function(){return!this.instanceNameFilled||!this.apiKeyFilled}},methods:{saveFinish(){this.isSaveSuccessful=!1},onSave(){if(this.isLoading=!0,this.credentialsMissing)return this.showValidationErrors=!0,void(this.isLoading=!1);this.isSaveSuccessful=!1,this.$refs.systemConfig.saveAll().then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0}).catch(()=>{this.isLoading=!1})},onTest(){this.isTesting=!0,this.isTestSuccessful=!1;let e={instanceName:this.getConfigValue("instanceName"),apiKey:this.getConfigValue("apiKey")};this.PayrexxPaymentSettingsService.validateApiCredentials(e).then(e=>{const t=e.credentialsValid;e.error;t?(this.createNotificationSuccess({title:this.$tc("payrexx-payment.settingsForm.messages.titleSuccess"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestSuccess")}),this.isTestSuccessful=!0):this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestError")}),this.isTesting=!1}).catch(e=>{this.createNotificationError({title:this.$tc("payrexx-payment.settingsForm.messages.titleError"),message:this.$tc("payrexx-payment.settingsForm.messages.messageTestError.general")}),this.isTesting=!1})},onConfigChange(e){this.config=e,this.checkCredentialsFilled(),this.showValidationErrors=!1},getBind(e,t){return t!==this.config&&this.onConfigChange(t),this.showValidationErrors&&("PayrexxPaymentGatewaySW6.settings.instanceName"!==e.name||this.instanceNameFilled||(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")}),"PayrexxPaymentGatewaySW6.settings.apiKey"!==e.name||this.apiKeyFilled||(e.config.error={code:1,detail:this.$tc("payrexx-payment.settingsForm.messages.messageNotBlank")})),e},checkCredentialsFilled(){this.instanceNameFilled=!!this.getConfigValue("instanceName"),this.apiKeyFilled=!!this.getConfigValue("apiKey")},getConfigValue(e){const t=this.$refs.systemConfig.actualConfigData.null;return null===this.$refs.systemConfig.currentSalesChannelId?this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]:this.config[`PayrexxPaymentGatewaySW6.settings.${e}`]||t[`PayrexxPaymentGatewaySW6.settings.${e}`]}}});var p=s("q3Ug"),m=s("+a4G");const{Module:g}=Shopware;g.register("payrexx-payment",{type:"plugin",name:"PayrexxPayment",title:"payrexx-payment.module.title",description:"payrexx-payment.module.description",version:"1.0.0",targetVersion:"1.0.0",icon:"default-action-settings",snippets:{"de-DE":p,"en-GB":m},routes:{index:{component:"payrexx-settings",path:"index",meta:{parentPath:"sw.settings.index"}}}});s("2/yO")}},[["vR4U","runtime","vendors-node"]]]);